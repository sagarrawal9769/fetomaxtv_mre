plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '35'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '4.2.0'
}

//apply plugin: 'com.android.application'
////apply plugin: 'io.fabric'
//apply plugin: 'com.google.firebase.crashlytics'
//
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.fetomaxtv_mre"
    compileSdkVersion 35
    ndkVersion "25.1.8937393"

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    buildFeatures {
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
                coreLibraryDesugaringEnabled true
    }

    defaultConfig {
        applicationId "com.doto.fetomax.doctorstv"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 18
        versionName flutterVersionName

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
                    // signingConfig signingConfigs.debug
                    minifyEnabled false
            shrinkResources false
        }
        debug{
            minifyEnabled false
        }
    }
}

flutter {
    source '../..'
}


dependencies {
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.itextpdf:itext-pdfa:5.5.13.1'
    implementation 'com.itextpdf:itextg:5.5.10'

    implementation 'com.github.kenglxn.QRGen:android:2.6.0'

    implementation "androidx.browser:browser:1.3.0"
    implementation 'com.google.android.gms:play-services-basement:17.5.0'

    implementation 'com.google.firebase:firebase-perf:19.1.0'
    // Add the Firebase Crashlytics SDK.

    // Recommended: Add the Google Analytics SDK.
    implementation 'com.google.firebase:firebase-analytics:18.0.2'

    // Add the Firebase Crashlytics NDK dependency.
}

//firebase performance
//apply plugin: 'com.google.firebase.firebase-perf'
////is supposed to be at the end of the file else errors encounter
//apply plugin: 'com.google.gms.google-services'
